---
- hosts: coreos
  gather_facts: false
  roles:
  - defunctzombie.coreos-bootstrap
  tasks:
  - name: install httplib2
    pip: name=httplib2

- hosts: etcd
  sudo: yes
  vars_files:
  - cluster.yaml
  roles:
  - etcd-node
    
- hosts: master
  vars:
    master_url: http://127.0.0.1:8080
  sudo: yes
  vars_files:
  - cluster.yaml
  roles:
  - master-keys
  - flannel
  - flannel-config
  - kubelet-master
  - kube-apiserver
  - kube-proxy-master
  - kube-podmaster
  - kube-controller-manager
  - kube-scheduler
  tasks:
  - name: Starting kubelet
    service: name=kubelet state=started

  - name: Ensure kubelet will start after boot
    service: name=kubelet enabled=yes

  - name: Waiting for API to start
    wait_for: host=127.0.0.1 port=8080

  - name: Creating Kubernetes namespace
    uri: >
      method=POST
      url=http://127.0.0.1:8080/api/v1/namespaces
      body='{"apiVersion":"v1","kind":"Namespace","metadata":{"name":"kube-system-foo4"}}'
    register: kube_result
    failed_when: >
        not (kube_result.status == 201 or (
            kube_result.status == 409 and
            'already exists' in kube_result.json.message))
    changed_when: "kube_result.status == 201"

  handlers:
  - name: daemon-reload
    command: systemctl daemon-reload

- hosts: minions
  sudo: yes
  vars:
    master_url: "{{MASTER_URL}}"
  vars_files:
  - cluster.yaml
  roles:
  - worker-keys
  - flannel
  - kubelet-worker
  - kube-proxy-worker
  tasks:
  - name: Starting kubelet
    service: name=kubelet state=started

  - name: Ensure kubelet will start after boot
    service: name=kubelet enabled=yes
  handlers:
  - name: daemon-reload
    command: systemctl daemon-reload

