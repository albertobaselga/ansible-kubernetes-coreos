---
- hosts: coreos
  gather_facts: false
  roles:
  - defunctzombie.coreos-bootstrap
  tasks:
  - name: install httplib2
    pip: name=httplib2
    
- hosts: master
  gather_facts: false
  vars:
    ETCD_ENDPOINTS: |
      {% for host in groups['etcd'] -%}
        http://{{host}}:2379{% if not loop.last -%},{%endif%}
      {%- endfor %}
    master_url: http://127.0.0.1:8080
  sudo: yes
  vars_files:
  - cluster.yaml
  roles:
  - master-keys
  - flannel
  - flannel-config
  - kubelet-master
  - kube-apiserver
  - kube-proxy-master
  - kube-podmaster
  - kube-controller-manager
  - kube-scheduler
  tasks:
  - name: Starting kubelet
    command: systemctl start kubelet

  - name: Ensure kubelet will start after boot
    command: systemctl enable kubelet

  - name: Waiting for API to start
    wait_for: host=127.0.0.1 port=8080

  - name: Creating Kubernetes namespace
    command: 
      curl -XPOST -d'{"apiVersion":"v1","kind":"Namespace","metadata":{"name":"kube-system"}}' "http://127.0.0.1:8080/api/v1/namespaces"

  handlers:
  - name: daemon-reload
    command: systemctl daemon-reload

- hosts: minions
  gather_facts: false
  sudo: yes
  vars:
    ETCD_ENDPOINTS: |
      {% for host in groups['etcd'] -%}
        http://{{host}}:2379{% if not loop.last -%},{%endif%}
      {%- endfor %}
    master_url: "https://{{groups['master'][0]}}"
  vars_files:
  - cluster.yaml
  roles:
  - worker-keys
  - flannel
  - kubelet-worker
  - kube-proxy-worker
  tasks:
  - name: Starting kubelet
    command: systemctl start kubelet

  - name: Ensure kubelet will start after boot
    command: systemctl enable kubelet
  handlers:
  - name: daemon-reload
    command: systemctl daemon-reload

